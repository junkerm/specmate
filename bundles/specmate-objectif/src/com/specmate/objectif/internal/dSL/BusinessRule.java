/**
 * generated by Xtext 2.17.1
 */
package com.specmate.objectif.internal.dSL;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Business Rule</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link com.specmate.objectif.dSL.BusinessRule#getCause <em>Cause</em>}</li>
 *   <li>{@link com.specmate.objectif.dSL.BusinessRule#getEffect <em>Effect</em>}</li>
 *   <li>{@link com.specmate.objectif.dSL.BusinessRule#getAlternative <em>Alternative</em>}</li>
 * </ul>
 *
 * @see com.specmate.objectif.dSL.DSLPackage#getBusinessRule()
 * @model
 * @generated
 */
public interface BusinessRule extends EObject
{
  /**
   * Returns the value of the '<em><b>Cause</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Cause</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Cause</em>' containment reference.
   * @see #setCause(OR_Node)
   * @see com.specmate.objectif.dSL.DSLPackage#getBusinessRule_Cause()
   * @model containment="true"
   * @generated
   */
  OR_Node getCause();

  /**
   * Sets the value of the '{@link com.specmate.objectif.dSL.BusinessRule#getCause <em>Cause</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Cause</em>' containment reference.
   * @see #getCause()
   * @generated
   */
  void setCause(OR_Node value);

  /**
   * Returns the value of the '<em><b>Effect</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Effect</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Effect</em>' containment reference.
   * @see #setEffect(EObject)
   * @see com.specmate.objectif.dSL.DSLPackage#getBusinessRule_Effect()
   * @model containment="true"
   * @generated
   */
  EObject getEffect();

  /**
   * Sets the value of the '{@link com.specmate.objectif.dSL.BusinessRule#getEffect <em>Effect</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Effect</em>' containment reference.
   * @see #getEffect()
   * @generated
   */
  void setEffect(EObject value);

  /**
   * Returns the value of the '<em><b>Alternative</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Alternative</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Alternative</em>' containment reference.
   * @see #setAlternative(EObject)
   * @see com.specmate.objectif.dSL.DSLPackage#getBusinessRule_Alternative()
   * @model containment="true"
   * @generated
   */
  EObject getAlternative();

  /**
   * Sets the value of the '{@link com.specmate.objectif.dSL.BusinessRule#getAlternative <em>Alternative</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Alternative</em>' containment reference.
   * @see #getAlternative()
   * @generated
   */
  void setAlternative(EObject value);

} // BusinessRule

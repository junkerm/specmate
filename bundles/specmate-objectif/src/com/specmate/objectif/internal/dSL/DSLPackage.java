/**
 * generated by Xtext 2.17.1
 */
package com.specmate.objectif.internal.dSL;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see com.specmate.objectif.dSL.DSLFactory
 * @model kind="package"
 * @generated
 */
public interface DSLPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "dSL";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.specmate.com/objectif/DSL";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "dSL";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  DSLPackage eINSTANCE = com.specmate.objectif.internal.dSL.impl.DSLPackageImpl.init();

  /**
   * The meta object id for the '{@link com.specmate.objectif.dSL.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.specmate.objectif.dSL.impl.ModelImpl
   * @see com.specmate.objectif.dSL.impl.DSLPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Rules</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__RULES = 0;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link com.specmate.objectif.dSL.impl.BusinessRuleImpl <em>Business Rule</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.specmate.objectif.dSL.impl.BusinessRuleImpl
   * @see com.specmate.objectif.dSL.impl.DSLPackageImpl#getBusinessRule()
   * @generated
   */
  int BUSINESS_RULE = 1;

  /**
   * The feature id for the '<em><b>Cause</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BUSINESS_RULE__CAUSE = 0;

  /**
   * The feature id for the '<em><b>Effect</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BUSINESS_RULE__EFFECT = 1;

  /**
   * The feature id for the '<em><b>Alternative</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BUSINESS_RULE__ALTERNATIVE = 2;

  /**
   * The number of structural features of the '<em>Business Rule</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BUSINESS_RULE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link com.specmate.objectif.dSL.impl.OR_NodeImpl <em>OR Node</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.specmate.objectif.dSL.impl.OR_NodeImpl
   * @see com.specmate.objectif.dSL.impl.DSLPackageImpl#getOR_Node()
   * @generated
   */
  int OR_NODE = 2;

  /**
   * The feature id for the '<em><b>Node</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_NODE__NODE = 0;

  /**
   * The feature id for the '<em><b>Or</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_NODE__OR = 1;

  /**
   * The feature id for the '<em><b>Sub Node</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_NODE__SUB_NODE = 2;

  /**
   * The number of structural features of the '<em>OR Node</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_NODE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link com.specmate.objectif.dSL.impl.AND_NodeImpl <em>AND Node</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.specmate.objectif.dSL.impl.AND_NodeImpl
   * @see com.specmate.objectif.dSL.impl.DSLPackageImpl#getAND_Node()
   * @generated
   */
  int AND_NODE = 3;

  /**
   * The feature id for the '<em><b>Node</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_NODE__NODE = 0;

  /**
   * The feature id for the '<em><b>And</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_NODE__AND = 1;

  /**
   * The feature id for the '<em><b>Sub Node</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_NODE__SUB_NODE = 2;

  /**
   * The number of structural features of the '<em>AND Node</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_NODE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link com.specmate.objectif.dSL.impl.LiteralImpl <em>Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.specmate.objectif.dSL.impl.LiteralImpl
   * @see com.specmate.objectif.dSL.impl.DSLPackageImpl#getLiteral()
   * @generated
   */
  int LITERAL = 4;

  /**
   * The feature id for the '<em><b>Content</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_FEATURE_COUNT = 1;


  /**
   * Returns the meta object for class '{@link com.specmate.objectif.dSL.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see com.specmate.objectif.dSL.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference list '{@link com.specmate.objectif.dSL.Model#getRules <em>Rules</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Rules</em>'.
   * @see com.specmate.objectif.dSL.Model#getRules()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Rules();

  /**
   * Returns the meta object for class '{@link com.specmate.objectif.dSL.BusinessRule <em>Business Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Business Rule</em>'.
   * @see com.specmate.objectif.dSL.BusinessRule
   * @generated
   */
  EClass getBusinessRule();

  /**
   * Returns the meta object for the containment reference '{@link com.specmate.objectif.dSL.BusinessRule#getCause <em>Cause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Cause</em>'.
   * @see com.specmate.objectif.dSL.BusinessRule#getCause()
   * @see #getBusinessRule()
   * @generated
   */
  EReference getBusinessRule_Cause();

  /**
   * Returns the meta object for the containment reference '{@link com.specmate.objectif.dSL.BusinessRule#getEffect <em>Effect</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Effect</em>'.
   * @see com.specmate.objectif.dSL.BusinessRule#getEffect()
   * @see #getBusinessRule()
   * @generated
   */
  EReference getBusinessRule_Effect();

  /**
   * Returns the meta object for the containment reference '{@link com.specmate.objectif.dSL.BusinessRule#getAlternative <em>Alternative</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Alternative</em>'.
   * @see com.specmate.objectif.dSL.BusinessRule#getAlternative()
   * @see #getBusinessRule()
   * @generated
   */
  EReference getBusinessRule_Alternative();

  /**
   * Returns the meta object for class '{@link com.specmate.objectif.dSL.OR_Node <em>OR Node</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>OR Node</em>'.
   * @see com.specmate.objectif.dSL.OR_Node
   * @generated
   */
  EClass getOR_Node();

  /**
   * Returns the meta object for the containment reference '{@link com.specmate.objectif.dSL.OR_Node#getNode <em>Node</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Node</em>'.
   * @see com.specmate.objectif.dSL.OR_Node#getNode()
   * @see #getOR_Node()
   * @generated
   */
  EReference getOR_Node_Node();

  /**
   * Returns the meta object for the attribute '{@link com.specmate.objectif.dSL.OR_Node#isOr <em>Or</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Or</em>'.
   * @see com.specmate.objectif.dSL.OR_Node#isOr()
   * @see #getOR_Node()
   * @generated
   */
  EAttribute getOR_Node_Or();

  /**
   * Returns the meta object for the containment reference '{@link com.specmate.objectif.dSL.OR_Node#getSubNode <em>Sub Node</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sub Node</em>'.
   * @see com.specmate.objectif.dSL.OR_Node#getSubNode()
   * @see #getOR_Node()
   * @generated
   */
  EReference getOR_Node_SubNode();

  /**
   * Returns the meta object for class '{@link com.specmate.objectif.dSL.AND_Node <em>AND Node</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>AND Node</em>'.
   * @see com.specmate.objectif.dSL.AND_Node
   * @generated
   */
  EClass getAND_Node();

  /**
   * Returns the meta object for the containment reference '{@link com.specmate.objectif.dSL.AND_Node#getNode <em>Node</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Node</em>'.
   * @see com.specmate.objectif.dSL.AND_Node#getNode()
   * @see #getAND_Node()
   * @generated
   */
  EReference getAND_Node_Node();

  /**
   * Returns the meta object for the attribute '{@link com.specmate.objectif.dSL.AND_Node#isAnd <em>And</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>And</em>'.
   * @see com.specmate.objectif.dSL.AND_Node#isAnd()
   * @see #getAND_Node()
   * @generated
   */
  EAttribute getAND_Node_And();

  /**
   * Returns the meta object for the containment reference '{@link com.specmate.objectif.dSL.AND_Node#getSubNode <em>Sub Node</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sub Node</em>'.
   * @see com.specmate.objectif.dSL.AND_Node#getSubNode()
   * @see #getAND_Node()
   * @generated
   */
  EReference getAND_Node_SubNode();

  /**
   * Returns the meta object for class '{@link com.specmate.objectif.dSL.Literal <em>Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Literal</em>'.
   * @see com.specmate.objectif.dSL.Literal
   * @generated
   */
  EClass getLiteral();

  /**
   * Returns the meta object for the attribute list '{@link com.specmate.objectif.dSL.Literal#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Content</em>'.
   * @see com.specmate.objectif.dSL.Literal#getContent()
   * @see #getLiteral()
   * @generated
   */
  EAttribute getLiteral_Content();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  DSLFactory getDSLFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link com.specmate.objectif.dSL.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.specmate.objectif.dSL.impl.ModelImpl
     * @see com.specmate.objectif.dSL.impl.DSLPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Rules</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__RULES = eINSTANCE.getModel_Rules();

    /**
     * The meta object literal for the '{@link com.specmate.objectif.dSL.impl.BusinessRuleImpl <em>Business Rule</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.specmate.objectif.dSL.impl.BusinessRuleImpl
     * @see com.specmate.objectif.dSL.impl.DSLPackageImpl#getBusinessRule()
     * @generated
     */
    EClass BUSINESS_RULE = eINSTANCE.getBusinessRule();

    /**
     * The meta object literal for the '<em><b>Cause</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BUSINESS_RULE__CAUSE = eINSTANCE.getBusinessRule_Cause();

    /**
     * The meta object literal for the '<em><b>Effect</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BUSINESS_RULE__EFFECT = eINSTANCE.getBusinessRule_Effect();

    /**
     * The meta object literal for the '<em><b>Alternative</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BUSINESS_RULE__ALTERNATIVE = eINSTANCE.getBusinessRule_Alternative();

    /**
     * The meta object literal for the '{@link com.specmate.objectif.dSL.impl.OR_NodeImpl <em>OR Node</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.specmate.objectif.dSL.impl.OR_NodeImpl
     * @see com.specmate.objectif.dSL.impl.DSLPackageImpl#getOR_Node()
     * @generated
     */
    EClass OR_NODE = eINSTANCE.getOR_Node();

    /**
     * The meta object literal for the '<em><b>Node</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR_NODE__NODE = eINSTANCE.getOR_Node_Node();

    /**
     * The meta object literal for the '<em><b>Or</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OR_NODE__OR = eINSTANCE.getOR_Node_Or();

    /**
     * The meta object literal for the '<em><b>Sub Node</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR_NODE__SUB_NODE = eINSTANCE.getOR_Node_SubNode();

    /**
     * The meta object literal for the '{@link com.specmate.objectif.dSL.impl.AND_NodeImpl <em>AND Node</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.specmate.objectif.dSL.impl.AND_NodeImpl
     * @see com.specmate.objectif.dSL.impl.DSLPackageImpl#getAND_Node()
     * @generated
     */
    EClass AND_NODE = eINSTANCE.getAND_Node();

    /**
     * The meta object literal for the '<em><b>Node</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND_NODE__NODE = eINSTANCE.getAND_Node_Node();

    /**
     * The meta object literal for the '<em><b>And</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AND_NODE__AND = eINSTANCE.getAND_Node_And();

    /**
     * The meta object literal for the '<em><b>Sub Node</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND_NODE__SUB_NODE = eINSTANCE.getAND_Node_SubNode();

    /**
     * The meta object literal for the '{@link com.specmate.objectif.dSL.impl.LiteralImpl <em>Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.specmate.objectif.dSL.impl.LiteralImpl
     * @see com.specmate.objectif.dSL.impl.DSLPackageImpl#getLiteral()
     * @generated
     */
    EClass LITERAL = eINSTANCE.getLiteral();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LITERAL__CONTENT = eINSTANCE.getLiteral_Content();

  }

} //DSLPackage
